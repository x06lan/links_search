{"version":3,"sources":["component/Link_tabs.js","component/Input_search.js","App.js","reportWebVitals.js","index.js"],"names":["Link_block","this","props","data","icon","react_default","a","createElement","href","className","target","rel","src","name","React","Component","Link_list","_this","links","cat","indata","map","item","index","tem","id","Link_tabs_Link_block","key","Link_tabs","esm","Link_tabs_Link_list","Input_search","trigger_time","Date","getTime","search","open_link","text","document","querySelector","value","console","log","search_text","split","max_3","i","length","ele","score","j","key_word","toLowerCase","k","sk","slice","push","body","appendChild","click","removeChild","keydown_search","e","now_time","which","onChange","onKeyUp","onClick","type","App","src_component_Input_search","src_component_Link_tabs","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.dfbad42f.chunk.js","sourcesContent":["// import { time } from 'eslint/lib/util/timing';\nimport React from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport './Link_tabs.css';\n\nclass Link_block extends React.Component{\n  render(){\n    if(this.props.data.icon==null){\n      this.props.data.icon=\"https://cdn-icons-png.flaticon.com/512/16/16686.png\"\n    }\n    return(\n        <a href={this.props.data.href} className='link_block' target=\"_blank\"  rel=\"noopener noreferrer\">\n          <img  src={this.props.data.icon} className='link_image'/>\n          <h3 className='link_title'>\n            {/* {this.props.data.id} */}\n            {this.props.data.name}\n          </h3>\n        </a>\n      )\n  }\n}\nclass Link_list extends React.Component{\n  \n  render(){\n    let links=[]\n    links=this.props.cat.indata.map((item,index)=>{\n      let tem=this.props.data[item]\n      tem.id=item\n      return tem\n    })\n    return(\n      <div className='container'>\n        {\n          links.map((item,index)=>{\n            return <Link_block  key={index} data={item}></Link_block>\n          })\n        }\n      </div>\n    )\n  }\n}\nclass Link_tabs extends React.Component{\n  render(){\n      let data=this.props.data\n      let cat=this.props.cat\n      return (\n        <div>\n          <Tabs>\n            <TabList>\n              {cat.map(function(item,index){\n                  return <Tab key={index}>\n                    <h2>\n                    {item.name}\n                    </h2>\n                    </Tab>\n              })}\n              {/* <Tab>Title 2</Tab> */}\n            </TabList>\n\n              {cat.map(function(item,index){\n                  return <TabPanel >\n                    <Link_list key={index} data={data} cat={item}></Link_list>\n                  </TabPanel>\n              })}\n            {/* <TabPanel>\n              <h2>Any content 2</h2>\n            </TabPanel> */}\n          </Tabs>\n        </div>\n    )\n  }\n}\nexport default Link_tabs;\n","import React from 'react';\nimport './Input_search.css';\nimport * as data from '../data.json'\nimport { max } from 'mathjs';\n\nclass Input_search extends React.Component{\n    render(){\n        let trigger_time=new Date().getTime()\n\n        data.data.map((item,index)=>{\n            // searchApi.indexDocument(index,item.name)\n            // searchApi.indexDocument(index,item.href)\n        })\n        function search(open_link){\n            let text=document.querySelector(\"#input_search\").value\n            console.log(text)\n            // let data_score=[]\n            let search_text=text.split(\" \")\n            let max_3=[[0,0,0]]\n\n            for(let i =0;i<data.data.length;i++){\n                let ele=data.data[i]\n                let score=0\n                for(let j =0;j<search_text.length;j++){\n                    let key_word=search_text[j]\n                    score+=15*ele.name.toLowerCase().split(key_word).length\n                    score+=3*ele.href.toLowerCase().split(key_word).length\n                    for (let k = 0; k < key_word.length-1; k+=2) {\n                        let sk=key_word.slice(k,k+1)\n                        score+=0.3*ele.name.toLowerCase().split(sk).length/ele.name.length\n                        score+=0.2*ele.href.toLowerCase().split(sk).length/ele.href.length\n                    }\n                }\n                if(score>max_3[max_3.length-1][0]){\n                    max_3.push([score,ele.name,ele.href])\n                }\n            }\n            console.log(max_3)\n            if(open_link){\n                let tem=document.createElement(\"a\")\n                tem.href=max_3[max_3.length-1][2]\n                // tem.href=max_3[max_3.length-1][3]\n                document.body.appendChild(tem)\n                tem.click()\n                document.body.removeChild(tem);\n            }\n        }\n        function keydown_search(e){\n            let now_time=new Date().getTime()\n            if(e.which==13 || now_time-trigger_time>100){\n                console.log(\"t\")\n                trigger_time=new Date().getTime()\n                if (e.which==13){\n                    search(true)\n                }\n                else{\n                    search(false)\n                }\n            }\n        }\n        return(\n            <div className='search_box'>\n                <input id='input_search' className='input_search' onChange={keydown_search} onKeyUp={keydown_search}></input>\n                <div className='btn_search'onClick={()=>{search(true)}}>\n                    <input className='btn_image' type=\"image\" src=\"./img/search.png\" ></input>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Input_search;","import Link_tabs from \"./component/Link_tabs\";\nimport Input_search from \"./component/Input_search\";\nimport React from \"react\";\nimport \"./App.css\";\nimport * as data from\"./data.json\"\nimport * as cat from\"./category.json\"\nclass App extends React.Component {\n  render(){\n  return (\n    <div>\n      <div className=\"header\">\n        <Input_search data={data.data}></Input_search>\n      </div>\n      <div className=\"content\">\n        <Link_tabs key={0} data={data.data} cat={cat.cat}></Link_tabs>\n      </div>\n    </div>\n    \n  );\n\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import \"./component/three_block\"\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}